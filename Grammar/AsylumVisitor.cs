//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Asylum.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="AsylumParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface IAsylumVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.init"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInit([NotNull] AsylumParser.InitContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UniversalUsing</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUniversalUsing([NotNull] AsylumParser.UniversalUsingContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UniversalNamespace</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUniversalNamespace([NotNull] AsylumParser.UniversalNamespaceContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UniversalExternFunction</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUniversalExternFunction([NotNull] AsylumParser.UniversalExternFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UniversalFunction</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUniversalFunction([NotNull] AsylumParser.UniversalFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UniversalEnum</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUniversalEnum([NotNull] AsylumParser.UniversalEnumContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UniversalUnion</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUniversalUnion([NotNull] AsylumParser.UniversalUnionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UniversalStruct</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUniversalStruct([NotNull] AsylumParser.UniversalStructContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UniversalInterface</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUniversalInterface([NotNull] AsylumParser.UniversalInterfaceContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UniversalImplementation</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUniversalImplementation([NotNull] AsylumParser.UniversalImplementationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UniversalTypedef</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUniversalTypedef([NotNull] AsylumParser.UniversalTypedefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.using_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUsing_statement([NotNull] AsylumParser.Using_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.namespace_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespace_statement([NotNull] AsylumParser.Namespace_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.extern_function_property"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExtern_function_property([NotNull] AsylumParser.Extern_function_propertyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.extern_function_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExtern_function_definition([NotNull] AsylumParser.Extern_function_definitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.function_property"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction_property([NotNull] AsylumParser.Function_propertyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.function_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction_definition([NotNull] AsylumParser.Function_definitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.constructor_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstructor_definition([NotNull] AsylumParser.Constructor_definitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.operator_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_definition([NotNull] AsylumParser.Operator_definitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAttribute([NotNull] AsylumParser.AttributeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.enum_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnum_definition([NotNull] AsylumParser.Enum_definitionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>EnumEntryPlain</c>
	/// labeled alternative in <see cref="AsylumParser.enum_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumEntryPlain([NotNull] AsylumParser.EnumEntryPlainContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>EnumEntryData</c>
	/// labeled alternative in <see cref="AsylumParser.enum_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumEntryData([NotNull] AsylumParser.EnumEntryDataContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>EnumEntryStructs</c>
	/// labeled alternative in <see cref="AsylumParser.enum_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumEntryStructs([NotNull] AsylumParser.EnumEntryStructsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.union_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnion_definition([NotNull] AsylumParser.Union_definitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.struct_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStruct_definition([NotNull] AsylumParser.Struct_definitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.interface_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterface_definition([NotNull] AsylumParser.Interface_definitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.implementation_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImplementation_definition([NotNull] AsylumParser.Implementation_definitionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ImplementationEntryFunction</c>
	/// labeled alternative in <see cref="AsylumParser.implementation_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImplementationEntryFunction([NotNull] AsylumParser.ImplementationEntryFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ImplementationEntryConstructor</c>
	/// labeled alternative in <see cref="AsylumParser.implementation_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImplementationEntryConstructor([NotNull] AsylumParser.ImplementationEntryConstructorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ImplementationEntryOperator</c>
	/// labeled alternative in <see cref="AsylumParser.implementation_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImplementationEntryOperator([NotNull] AsylumParser.ImplementationEntryOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ImplementationEntryCast</c>
	/// labeled alternative in <see cref="AsylumParser.implementation_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImplementationEntryCast([NotNull] AsylumParser.ImplementationEntryCastContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.cast_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCast_definition([NotNull] AsylumParser.Cast_definitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.typedef_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypedef_definition([NotNull] AsylumParser.Typedef_definitionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StructData</c>
	/// labeled alternative in <see cref="AsylumParser.struct_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructData([NotNull] AsylumParser.StructDataContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StructAccess</c>
	/// labeled alternative in <see cref="AsylumParser.struct_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructAccess([NotNull] AsylumParser.StructAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PropertyGetSet</c>
	/// labeled alternative in <see cref="AsylumParser.struct_entry_property"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertyGetSet([NotNull] AsylumParser.PropertyGetSetContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PropertySetOnly</c>
	/// labeled alternative in <see cref="AsylumParser.struct_entry_property"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertySetOnly([NotNull] AsylumParser.PropertySetOnlyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.code_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCode_body([NotNull] AsylumParser.Code_bodyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VariableDeclarationStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclarationStatement([NotNull] AsylumParser.VariableDeclarationStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LoopStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopStatement([NotNull] AsylumParser.LoopStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>WhileLoopStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileLoopStatement([NotNull] AsylumParser.WhileLoopStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DoWhileLoopStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDoWhileLoopStatement([NotNull] AsylumParser.DoWhileLoopStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ForLoopStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForLoopStatement([NotNull] AsylumParser.ForLoopStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BreakStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBreakStatement([NotNull] AsylumParser.BreakStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ContinueStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContinueStatement([NotNull] AsylumParser.ContinueStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IfStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] AsylumParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>SwitchCaseStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchCaseStatement([NotNull] AsylumParser.SwitchCaseStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExpressionStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionStatement([NotNull] AsylumParser.ExpressionStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IndentedStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndentedStatement([NotNull] AsylumParser.IndentedStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ReturnStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] AsylumParser.ReturnStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoop([NotNull] AsylumParser.LoopContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.while_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhile_loop([NotNull] AsylumParser.While_loopContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.do_while_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDo_while_loop([NotNull] AsylumParser.Do_while_loopContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TraditionalForLoop</c>
	/// labeled alternative in <see cref="AsylumParser.for_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTraditionalForLoop([NotNull] AsylumParser.TraditionalForLoopContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TraditionalForLoopNoParens</c>
	/// labeled alternative in <see cref="AsylumParser.for_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTraditionalForLoopNoParens([NotNull] AsylumParser.TraditionalForLoopNoParensContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ForEachLoop</c>
	/// labeled alternative in <see cref="AsylumParser.for_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForEachLoop([NotNull] AsylumParser.ForEachLoopContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ForEachLoopNoParens</c>
	/// labeled alternative in <see cref="AsylumParser.for_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForEachLoopNoParens([NotNull] AsylumParser.ForEachLoopNoParensContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.break_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBreak_statement([NotNull] AsylumParser.Break_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.continue_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContinue_statement([NotNull] AsylumParser.Continue_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf_statement([NotNull] AsylumParser.If_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>SwitchCase</c>
	/// labeled alternative in <see cref="AsylumParser.switch_case"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchCase([NotNull] AsylumParser.SwitchCaseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>SwitchCaseNoParens</c>
	/// labeled alternative in <see cref="AsylumParser.switch_case"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchCaseNoParens([NotNull] AsylumParser.SwitchCaseNoParensContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CaseExpression</c>
	/// labeled alternative in <see cref="AsylumParser.switch_rule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseExpression([NotNull] AsylumParser.CaseExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CaseDefault</c>
	/// labeled alternative in <see cref="AsylumParser.switch_rule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseDefault([NotNull] AsylumParser.CaseDefaultContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.function_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction_call([NotNull] AsylumParser.Function_callContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.constructor_with_initializers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstructor_with_initializers([NotNull] AsylumParser.Constructor_with_initializersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.initializer_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInitializer_value([NotNull] AsylumParser.Initializer_valueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.return_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturn_value([NotNull] AsylumParser.Return_valueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.type_implements_extended"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_implements_extended([NotNull] AsylumParser.Type_implements_extendedContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TypeImplementsExprSingle</c>
	/// labeled alternative in <see cref="AsylumParser.type_implements_extended_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeImplementsExprSingle([NotNull] AsylumParser.TypeImplementsExprSingleContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TypeImplementsExprAnd</c>
	/// labeled alternative in <see cref="AsylumParser.type_implements_extended_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeImplementsExprAnd([NotNull] AsylumParser.TypeImplementsExprAndContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TypeImplementsExprOr</c>
	/// labeled alternative in <see cref="AsylumParser.type_implements_extended_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeImplementsExprOr([NotNull] AsylumParser.TypeImplementsExprOrContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TypeImplementsExprParenthesis</c>
	/// labeled alternative in <see cref="AsylumParser.type_implements_extended_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeImplementsExprParenthesis([NotNull] AsylumParser.TypeImplementsExprParenthesisContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.type_implements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_implements([NotNull] AsylumParser.Type_implementsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.generic_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGeneric_definition([NotNull] AsylumParser.Generic_definitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.generic_specifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGeneric_specifier([NotNull] AsylumParser.Generic_specifierContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprCode</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprCode([NotNull] AsylumParser.ExprCodeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprTernary</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprTernary([NotNull] AsylumParser.ExprTernaryContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprComparison</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprComparison([NotNull] AsylumParser.ExprComparisonContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprString</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprString([NotNull] AsylumParser.ExprStringContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprNullCheck</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprNullCheck([NotNull] AsylumParser.ExprNullCheckContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprComma</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprComma([NotNull] AsylumParser.ExprCommaContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprParenthesis</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprParenthesis([NotNull] AsylumParser.ExprParenthesisContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprShift</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprShift([NotNull] AsylumParser.ExprShiftContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprCallReturnedFunction</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprCallReturnedFunction([NotNull] AsylumParser.ExprCallReturnedFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprAdditive</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprAdditive([NotNull] AsylumParser.ExprAdditiveContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprBitOr</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprBitOr([NotNull] AsylumParser.ExprBitOrContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprPrimary</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprPrimary([NotNull] AsylumParser.ExprPrimaryContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprAnd</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprAnd([NotNull] AsylumParser.ExprAndContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprEqualityComparison</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprEqualityComparison([NotNull] AsylumParser.ExprEqualityComparisonContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprXor</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprXor([NotNull] AsylumParser.ExprXorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprOr</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprOr([NotNull] AsylumParser.ExprOrContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprMultiplicative</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprMultiplicative([NotNull] AsylumParser.ExprMultiplicativeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprUnary</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprUnary([NotNull] AsylumParser.ExprUnaryContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprBitAnd</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprBitAnd([NotNull] AsylumParser.ExprBitAndContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprRange</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprRange([NotNull] AsylumParser.ExprRangeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprInteger</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprInteger([NotNull] AsylumParser.ExprIntegerContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprAssignment</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprAssignment([NotNull] AsylumParser.ExprAssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprLambda</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprLambda([NotNull] AsylumParser.ExprLambdaContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ExprSubprimary</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprSubprimary([NotNull] AsylumParser.ExprSubprimaryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.primary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimary_expression([NotNull] AsylumParser.Primary_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.unary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnary_expression([NotNull] AsylumParser.Unary_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.access_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAccess_modifier([NotNull] AsylumParser.Access_modifierContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VariableAssignmentUnpack</c>
	/// labeled alternative in <see cref="AsylumParser.variable_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableAssignmentUnpack([NotNull] AsylumParser.VariableAssignmentUnpackContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VariableAssignmentNormal</c>
	/// labeled alternative in <see cref="AsylumParser.variable_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableAssignmentNormal([NotNull] AsylumParser.VariableAssignmentNormalContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VariableDeclareWithInitializer</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclareWithInitializer([NotNull] AsylumParser.VariableDeclareWithInitializerContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VariableDeclareWithTupleInitializer</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclareWithTupleInitializer([NotNull] AsylumParser.VariableDeclareWithTupleInitializerContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VariableDeclareWithInitializerExpr</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclareWithInitializerExpr([NotNull] AsylumParser.VariableDeclareWithInitializerExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VariableDeclareWithTupleInitializerExpr</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclareWithTupleInitializerExpr([NotNull] AsylumParser.VariableDeclareWithTupleInitializerExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VariableDeclareWithoutInitializer</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclareWithoutInitializer([NotNull] AsylumParser.VariableDeclareWithoutInitializerContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VariableDeclareWithoutInitializerMultipleTypes</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclareWithoutInitializerMultipleTypes([NotNull] AsylumParser.VariableDeclareWithoutInitializerMultipleTypesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLabel([NotNull] AsylumParser.LabelContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VariableArgsNoneOrSome</c>
	/// labeled alternative in <see cref="AsylumParser.variable_arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableArgsNoneOrSome([NotNull] AsylumParser.VariableArgsNoneOrSomeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VariableArgsVariadicOnly</c>
	/// labeled alternative in <see cref="AsylumParser.variable_arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableArgsVariadicOnly([NotNull] AsylumParser.VariableArgsVariadicOnlyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.variable_parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable_parameter([NotNull] AsylumParser.Variable_parameterContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VarTypeCustom</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarTypeCustom([NotNull] AsylumParser.VarTypeCustomContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VarTypeGenerics</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarTypeGenerics([NotNull] AsylumParser.VarTypeGenericsContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VarTypeDietPointer</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarTypeDietPointer([NotNull] AsylumParser.VarTypeDietPointerContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VarTypeStatic</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarTypeStatic([NotNull] AsylumParser.VarTypeStaticContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VarTypeVolatile</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarTypeVolatile([NotNull] AsylumParser.VarTypeVolatileContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VarTypeArray</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarTypeArray([NotNull] AsylumParser.VarTypeArrayContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VarTypeTuple</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarTypeTuple([NotNull] AsylumParser.VarTypeTupleContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VarTypeThis</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarTypeThis([NotNull] AsylumParser.VarTypeThisContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VarTypeTupleProper</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarTypeTupleProper([NotNull] AsylumParser.VarTypeTupleProperContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VarTypeConstant</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarTypeConstant([NotNull] AsylumParser.VarTypeConstantContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VarTypeAtomic</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarTypeAtomic([NotNull] AsylumParser.VarTypeAtomicContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VarTypeRawPointer</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarTypeRawPointer([NotNull] AsylumParser.VarTypeRawPointerContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VarTypePrimitive</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarTypePrimitive([NotNull] AsylumParser.VarTypePrimitiveContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimitiveString</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveString([NotNull] AsylumParser.PrimitiveStringContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimitiveBool</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveBool([NotNull] AsylumParser.PrimitiveBoolContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimitiveUnsigned</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveUnsigned([NotNull] AsylumParser.PrimitiveUnsignedContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimitiveSigned</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveSigned([NotNull] AsylumParser.PrimitiveSignedContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimitiveHalf</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveHalf([NotNull] AsylumParser.PrimitiveHalfContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimitiveFloat</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveFloat([NotNull] AsylumParser.PrimitiveFloatContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimitiveDouble</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveDouble([NotNull] AsylumParser.PrimitiveDoubleContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimitiveExtended</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveExtended([NotNull] AsylumParser.PrimitiveExtendedContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimitiveDecimal</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveDecimal([NotNull] AsylumParser.PrimitiveDecimalContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimitiveFixed</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveFixed([NotNull] AsylumParser.PrimitiveFixedContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimitiveVarLen</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveVarLen([NotNull] AsylumParser.PrimitiveVarLenContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimitiveObject</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveObject([NotNull] AsylumParser.PrimitiveObjectContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimitiveVoid</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveVoid([NotNull] AsylumParser.PrimitiveVoidContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimitiveFunction</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveFunction([NotNull] AsylumParser.PrimitiveFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimitiveEvent</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveEvent([NotNull] AsylumParser.PrimitiveEventContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimitiveChar</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveChar([NotNull] AsylumParser.PrimitiveCharContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimitiveWideChar</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveWideChar([NotNull] AsylumParser.PrimitiveWideCharContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimitiveAutoVariable</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveAutoVariable([NotNull] AsylumParser.PrimitiveAutoVariableContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimitiveUnsignedAny</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveUnsignedAny([NotNull] AsylumParser.PrimitiveUnsignedAnyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimitiveSignedAny</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveSignedAny([NotNull] AsylumParser.PrimitiveSignedAnyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimitiveFloatingAny</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveFloatingAny([NotNull] AsylumParser.PrimitiveFloatingAnyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimitiveFixedAny</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveFixedAny([NotNull] AsylumParser.PrimitiveFixedAnyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ConstantTrue</c>
	/// labeled alternative in <see cref="AsylumParser.defined_constants"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstantTrue([NotNull] AsylumParser.ConstantTrueContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ConstantFalse</c>
	/// labeled alternative in <see cref="AsylumParser.defined_constants"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstantFalse([NotNull] AsylumParser.ConstantFalseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ConstantNull</c>
	/// labeled alternative in <see cref="AsylumParser.defined_constants"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstantNull([NotNull] AsylumParser.ConstantNullContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.variable_or_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable_or_function([NotNull] AsylumParser.Variable_or_functionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator([NotNull] AsylumParser.OperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AsylumParser.assignment_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment_operator([NotNull] AsylumParser.Assignment_operatorContext context);
}
