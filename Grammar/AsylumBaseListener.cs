//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Asylum.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IAsylumListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class AsylumBaseListener : IAsylumListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.init"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInit([NotNull] AsylumParser.InitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.init"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInit([NotNull] AsylumParser.InitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UniversalUsing</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUniversalUsing([NotNull] AsylumParser.UniversalUsingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UniversalUsing</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUniversalUsing([NotNull] AsylumParser.UniversalUsingContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UniversalNamespace</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUniversalNamespace([NotNull] AsylumParser.UniversalNamespaceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UniversalNamespace</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUniversalNamespace([NotNull] AsylumParser.UniversalNamespaceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UniversalExternFunction</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUniversalExternFunction([NotNull] AsylumParser.UniversalExternFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UniversalExternFunction</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUniversalExternFunction([NotNull] AsylumParser.UniversalExternFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UniversalFunction</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUniversalFunction([NotNull] AsylumParser.UniversalFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UniversalFunction</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUniversalFunction([NotNull] AsylumParser.UniversalFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UniversalEnum</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUniversalEnum([NotNull] AsylumParser.UniversalEnumContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UniversalEnum</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUniversalEnum([NotNull] AsylumParser.UniversalEnumContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UniversalUnion</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUniversalUnion([NotNull] AsylumParser.UniversalUnionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UniversalUnion</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUniversalUnion([NotNull] AsylumParser.UniversalUnionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UniversalStruct</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUniversalStruct([NotNull] AsylumParser.UniversalStructContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UniversalStruct</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUniversalStruct([NotNull] AsylumParser.UniversalStructContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UniversalInterface</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUniversalInterface([NotNull] AsylumParser.UniversalInterfaceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UniversalInterface</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUniversalInterface([NotNull] AsylumParser.UniversalInterfaceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UniversalImplementation</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUniversalImplementation([NotNull] AsylumParser.UniversalImplementationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UniversalImplementation</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUniversalImplementation([NotNull] AsylumParser.UniversalImplementationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UniversalTypedef</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUniversalTypedef([NotNull] AsylumParser.UniversalTypedefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UniversalTypedef</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUniversalTypedef([NotNull] AsylumParser.UniversalTypedefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.using_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsing_statement([NotNull] AsylumParser.Using_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.using_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsing_statement([NotNull] AsylumParser.Using_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.namespace_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespace_statement([NotNull] AsylumParser.Namespace_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.namespace_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespace_statement([NotNull] AsylumParser.Namespace_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.extern_function_property"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExtern_function_property([NotNull] AsylumParser.Extern_function_propertyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.extern_function_property"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExtern_function_property([NotNull] AsylumParser.Extern_function_propertyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.extern_function_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExtern_function_definition([NotNull] AsylumParser.Extern_function_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.extern_function_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExtern_function_definition([NotNull] AsylumParser.Extern_function_definitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.function_property"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_property([NotNull] AsylumParser.Function_propertyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.function_property"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_property([NotNull] AsylumParser.Function_propertyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.function_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_definition([NotNull] AsylumParser.Function_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.function_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_definition([NotNull] AsylumParser.Function_definitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.constructor_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstructor_definition([NotNull] AsylumParser.Constructor_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.constructor_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstructor_definition([NotNull] AsylumParser.Constructor_definitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.operator_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperator_definition([NotNull] AsylumParser.Operator_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.operator_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperator_definition([NotNull] AsylumParser.Operator_definitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute([NotNull] AsylumParser.AttributeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute([NotNull] AsylumParser.AttributeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.enum_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnum_definition([NotNull] AsylumParser.Enum_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.enum_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnum_definition([NotNull] AsylumParser.Enum_definitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>EnumEntryPlain</c>
	/// labeled alternative in <see cref="AsylumParser.enum_entry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumEntryPlain([NotNull] AsylumParser.EnumEntryPlainContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>EnumEntryPlain</c>
	/// labeled alternative in <see cref="AsylumParser.enum_entry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumEntryPlain([NotNull] AsylumParser.EnumEntryPlainContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>EnumEntryData</c>
	/// labeled alternative in <see cref="AsylumParser.enum_entry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumEntryData([NotNull] AsylumParser.EnumEntryDataContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>EnumEntryData</c>
	/// labeled alternative in <see cref="AsylumParser.enum_entry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumEntryData([NotNull] AsylumParser.EnumEntryDataContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>EnumEntryStructs</c>
	/// labeled alternative in <see cref="AsylumParser.enum_entry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumEntryStructs([NotNull] AsylumParser.EnumEntryStructsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>EnumEntryStructs</c>
	/// labeled alternative in <see cref="AsylumParser.enum_entry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumEntryStructs([NotNull] AsylumParser.EnumEntryStructsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.union_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnion_definition([NotNull] AsylumParser.Union_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.union_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnion_definition([NotNull] AsylumParser.Union_definitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.struct_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStruct_definition([NotNull] AsylumParser.Struct_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.struct_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStruct_definition([NotNull] AsylumParser.Struct_definitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.interface_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterface_definition([NotNull] AsylumParser.Interface_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.interface_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterface_definition([NotNull] AsylumParser.Interface_definitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.implementation_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImplementation_definition([NotNull] AsylumParser.Implementation_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.implementation_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImplementation_definition([NotNull] AsylumParser.Implementation_definitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ImplementationEntryFunction</c>
	/// labeled alternative in <see cref="AsylumParser.implementation_entry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImplementationEntryFunction([NotNull] AsylumParser.ImplementationEntryFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ImplementationEntryFunction</c>
	/// labeled alternative in <see cref="AsylumParser.implementation_entry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImplementationEntryFunction([NotNull] AsylumParser.ImplementationEntryFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ImplementationEntryConstructor</c>
	/// labeled alternative in <see cref="AsylumParser.implementation_entry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImplementationEntryConstructor([NotNull] AsylumParser.ImplementationEntryConstructorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ImplementationEntryConstructor</c>
	/// labeled alternative in <see cref="AsylumParser.implementation_entry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImplementationEntryConstructor([NotNull] AsylumParser.ImplementationEntryConstructorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ImplementationEntryOperator</c>
	/// labeled alternative in <see cref="AsylumParser.implementation_entry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImplementationEntryOperator([NotNull] AsylumParser.ImplementationEntryOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ImplementationEntryOperator</c>
	/// labeled alternative in <see cref="AsylumParser.implementation_entry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImplementationEntryOperator([NotNull] AsylumParser.ImplementationEntryOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ImplementationEntryCast</c>
	/// labeled alternative in <see cref="AsylumParser.implementation_entry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImplementationEntryCast([NotNull] AsylumParser.ImplementationEntryCastContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ImplementationEntryCast</c>
	/// labeled alternative in <see cref="AsylumParser.implementation_entry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImplementationEntryCast([NotNull] AsylumParser.ImplementationEntryCastContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.cast_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCast_definition([NotNull] AsylumParser.Cast_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.cast_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCast_definition([NotNull] AsylumParser.Cast_definitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.typedef_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypedef_definition([NotNull] AsylumParser.Typedef_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.typedef_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypedef_definition([NotNull] AsylumParser.Typedef_definitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>StructData</c>
	/// labeled alternative in <see cref="AsylumParser.struct_entry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructData([NotNull] AsylumParser.StructDataContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>StructData</c>
	/// labeled alternative in <see cref="AsylumParser.struct_entry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructData([NotNull] AsylumParser.StructDataContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>StructAccess</c>
	/// labeled alternative in <see cref="AsylumParser.struct_entry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructAccess([NotNull] AsylumParser.StructAccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>StructAccess</c>
	/// labeled alternative in <see cref="AsylumParser.struct_entry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructAccess([NotNull] AsylumParser.StructAccessContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PropertyGetSet</c>
	/// labeled alternative in <see cref="AsylumParser.struct_entry_property"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropertyGetSet([NotNull] AsylumParser.PropertyGetSetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PropertyGetSet</c>
	/// labeled alternative in <see cref="AsylumParser.struct_entry_property"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropertyGetSet([NotNull] AsylumParser.PropertyGetSetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PropertySetOnly</c>
	/// labeled alternative in <see cref="AsylumParser.struct_entry_property"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropertySetOnly([NotNull] AsylumParser.PropertySetOnlyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PropertySetOnly</c>
	/// labeled alternative in <see cref="AsylumParser.struct_entry_property"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropertySetOnly([NotNull] AsylumParser.PropertySetOnlyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.code_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCode_body([NotNull] AsylumParser.Code_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.code_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCode_body([NotNull] AsylumParser.Code_bodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableDeclarationStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclarationStatement([NotNull] AsylumParser.VariableDeclarationStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableDeclarationStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclarationStatement([NotNull] AsylumParser.VariableDeclarationStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>LoopStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoopStatement([NotNull] AsylumParser.LoopStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LoopStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoopStatement([NotNull] AsylumParser.LoopStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>WhileLoopStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileLoopStatement([NotNull] AsylumParser.WhileLoopStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>WhileLoopStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileLoopStatement([NotNull] AsylumParser.WhileLoopStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DoWhileLoopStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDoWhileLoopStatement([NotNull] AsylumParser.DoWhileLoopStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DoWhileLoopStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDoWhileLoopStatement([NotNull] AsylumParser.DoWhileLoopStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ForLoopStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForLoopStatement([NotNull] AsylumParser.ForLoopStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ForLoopStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForLoopStatement([NotNull] AsylumParser.ForLoopStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BreakStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreakStatement([NotNull] AsylumParser.BreakStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BreakStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreakStatement([NotNull] AsylumParser.BreakStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ContinueStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContinueStatement([NotNull] AsylumParser.ContinueStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ContinueStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContinueStatement([NotNull] AsylumParser.ContinueStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IfStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] AsylumParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IfStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] AsylumParser.IfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SwitchCaseStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchCaseStatement([NotNull] AsylumParser.SwitchCaseStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SwitchCaseStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchCaseStatement([NotNull] AsylumParser.SwitchCaseStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExpressionStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionStatement([NotNull] AsylumParser.ExpressionStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExpressionStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionStatement([NotNull] AsylumParser.ExpressionStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IndentedStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndentedStatement([NotNull] AsylumParser.IndentedStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IndentedStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndentedStatement([NotNull] AsylumParser.IndentedStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ReturnStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] AsylumParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ReturnStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] AsylumParser.ReturnStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoop([NotNull] AsylumParser.LoopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoop([NotNull] AsylumParser.LoopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.while_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhile_loop([NotNull] AsylumParser.While_loopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.while_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhile_loop([NotNull] AsylumParser.While_loopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.do_while_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDo_while_loop([NotNull] AsylumParser.Do_while_loopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.do_while_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDo_while_loop([NotNull] AsylumParser.Do_while_loopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TraditionalForLoop</c>
	/// labeled alternative in <see cref="AsylumParser.for_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTraditionalForLoop([NotNull] AsylumParser.TraditionalForLoopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TraditionalForLoop</c>
	/// labeled alternative in <see cref="AsylumParser.for_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTraditionalForLoop([NotNull] AsylumParser.TraditionalForLoopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TraditionalForLoopNoParens</c>
	/// labeled alternative in <see cref="AsylumParser.for_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTraditionalForLoopNoParens([NotNull] AsylumParser.TraditionalForLoopNoParensContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TraditionalForLoopNoParens</c>
	/// labeled alternative in <see cref="AsylumParser.for_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTraditionalForLoopNoParens([NotNull] AsylumParser.TraditionalForLoopNoParensContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ForEachLoop</c>
	/// labeled alternative in <see cref="AsylumParser.for_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForEachLoop([NotNull] AsylumParser.ForEachLoopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ForEachLoop</c>
	/// labeled alternative in <see cref="AsylumParser.for_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForEachLoop([NotNull] AsylumParser.ForEachLoopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ForEachLoopNoParens</c>
	/// labeled alternative in <see cref="AsylumParser.for_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForEachLoopNoParens([NotNull] AsylumParser.ForEachLoopNoParensContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ForEachLoopNoParens</c>
	/// labeled alternative in <see cref="AsylumParser.for_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForEachLoopNoParens([NotNull] AsylumParser.ForEachLoopNoParensContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.break_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreak_statement([NotNull] AsylumParser.Break_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.break_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreak_statement([NotNull] AsylumParser.Break_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.continue_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContinue_statement([NotNull] AsylumParser.Continue_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.continue_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContinue_statement([NotNull] AsylumParser.Continue_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_statement([NotNull] AsylumParser.If_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_statement([NotNull] AsylumParser.If_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SwitchCase</c>
	/// labeled alternative in <see cref="AsylumParser.switch_case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchCase([NotNull] AsylumParser.SwitchCaseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SwitchCase</c>
	/// labeled alternative in <see cref="AsylumParser.switch_case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchCase([NotNull] AsylumParser.SwitchCaseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SwitchCaseNoParens</c>
	/// labeled alternative in <see cref="AsylumParser.switch_case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchCaseNoParens([NotNull] AsylumParser.SwitchCaseNoParensContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SwitchCaseNoParens</c>
	/// labeled alternative in <see cref="AsylumParser.switch_case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchCaseNoParens([NotNull] AsylumParser.SwitchCaseNoParensContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CaseExpression</c>
	/// labeled alternative in <see cref="AsylumParser.switch_rule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseExpression([NotNull] AsylumParser.CaseExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CaseExpression</c>
	/// labeled alternative in <see cref="AsylumParser.switch_rule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseExpression([NotNull] AsylumParser.CaseExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CaseDefault</c>
	/// labeled alternative in <see cref="AsylumParser.switch_rule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseDefault([NotNull] AsylumParser.CaseDefaultContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CaseDefault</c>
	/// labeled alternative in <see cref="AsylumParser.switch_rule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseDefault([NotNull] AsylumParser.CaseDefaultContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.function_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_call([NotNull] AsylumParser.Function_callContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.function_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_call([NotNull] AsylumParser.Function_callContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.constructor_with_initializers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstructor_with_initializers([NotNull] AsylumParser.Constructor_with_initializersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.constructor_with_initializers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstructor_with_initializers([NotNull] AsylumParser.Constructor_with_initializersContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.initializer_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInitializer_value([NotNull] AsylumParser.Initializer_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.initializer_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInitializer_value([NotNull] AsylumParser.Initializer_valueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.return_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturn_value([NotNull] AsylumParser.Return_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.return_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturn_value([NotNull] AsylumParser.Return_valueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.type_implements_extended"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_implements_extended([NotNull] AsylumParser.Type_implements_extendedContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.type_implements_extended"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_implements_extended([NotNull] AsylumParser.Type_implements_extendedContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TypeImplementsExprSingle</c>
	/// labeled alternative in <see cref="AsylumParser.type_implements_extended_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeImplementsExprSingle([NotNull] AsylumParser.TypeImplementsExprSingleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TypeImplementsExprSingle</c>
	/// labeled alternative in <see cref="AsylumParser.type_implements_extended_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeImplementsExprSingle([NotNull] AsylumParser.TypeImplementsExprSingleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TypeImplementsExprAnd</c>
	/// labeled alternative in <see cref="AsylumParser.type_implements_extended_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeImplementsExprAnd([NotNull] AsylumParser.TypeImplementsExprAndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TypeImplementsExprAnd</c>
	/// labeled alternative in <see cref="AsylumParser.type_implements_extended_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeImplementsExprAnd([NotNull] AsylumParser.TypeImplementsExprAndContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TypeImplementsExprOr</c>
	/// labeled alternative in <see cref="AsylumParser.type_implements_extended_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeImplementsExprOr([NotNull] AsylumParser.TypeImplementsExprOrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TypeImplementsExprOr</c>
	/// labeled alternative in <see cref="AsylumParser.type_implements_extended_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeImplementsExprOr([NotNull] AsylumParser.TypeImplementsExprOrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TypeImplementsExprParenthesis</c>
	/// labeled alternative in <see cref="AsylumParser.type_implements_extended_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeImplementsExprParenthesis([NotNull] AsylumParser.TypeImplementsExprParenthesisContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TypeImplementsExprParenthesis</c>
	/// labeled alternative in <see cref="AsylumParser.type_implements_extended_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeImplementsExprParenthesis([NotNull] AsylumParser.TypeImplementsExprParenthesisContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.type_implements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_implements([NotNull] AsylumParser.Type_implementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.type_implements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_implements([NotNull] AsylumParser.Type_implementsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.generic_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGeneric_definition([NotNull] AsylumParser.Generic_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.generic_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGeneric_definition([NotNull] AsylumParser.Generic_definitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.generic_specifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGeneric_specifier([NotNull] AsylumParser.Generic_specifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.generic_specifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGeneric_specifier([NotNull] AsylumParser.Generic_specifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprCode</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprCode([NotNull] AsylumParser.ExprCodeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprCode</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprCode([NotNull] AsylumParser.ExprCodeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprTernary</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprTernary([NotNull] AsylumParser.ExprTernaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprTernary</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprTernary([NotNull] AsylumParser.ExprTernaryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprComparison</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprComparison([NotNull] AsylumParser.ExprComparisonContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprComparison</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprComparison([NotNull] AsylumParser.ExprComparisonContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprString</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprString([NotNull] AsylumParser.ExprStringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprString</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprString([NotNull] AsylumParser.ExprStringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprNullCheck</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprNullCheck([NotNull] AsylumParser.ExprNullCheckContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprNullCheck</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprNullCheck([NotNull] AsylumParser.ExprNullCheckContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprComma</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprComma([NotNull] AsylumParser.ExprCommaContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprComma</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprComma([NotNull] AsylumParser.ExprCommaContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprParenthesis</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprParenthesis([NotNull] AsylumParser.ExprParenthesisContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprParenthesis</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprParenthesis([NotNull] AsylumParser.ExprParenthesisContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprShift</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprShift([NotNull] AsylumParser.ExprShiftContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprShift</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprShift([NotNull] AsylumParser.ExprShiftContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprCallReturnedFunction</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprCallReturnedFunction([NotNull] AsylumParser.ExprCallReturnedFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprCallReturnedFunction</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprCallReturnedFunction([NotNull] AsylumParser.ExprCallReturnedFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprAdditive</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprAdditive([NotNull] AsylumParser.ExprAdditiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprAdditive</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprAdditive([NotNull] AsylumParser.ExprAdditiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprBitOr</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprBitOr([NotNull] AsylumParser.ExprBitOrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprBitOr</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprBitOr([NotNull] AsylumParser.ExprBitOrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprPrimary</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprPrimary([NotNull] AsylumParser.ExprPrimaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprPrimary</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprPrimary([NotNull] AsylumParser.ExprPrimaryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprAnd</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprAnd([NotNull] AsylumParser.ExprAndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprAnd</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprAnd([NotNull] AsylumParser.ExprAndContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprEqualityComparison</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprEqualityComparison([NotNull] AsylumParser.ExprEqualityComparisonContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprEqualityComparison</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprEqualityComparison([NotNull] AsylumParser.ExprEqualityComparisonContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprXor</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprXor([NotNull] AsylumParser.ExprXorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprXor</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprXor([NotNull] AsylumParser.ExprXorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprOr</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprOr([NotNull] AsylumParser.ExprOrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprOr</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprOr([NotNull] AsylumParser.ExprOrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprMultiplicative</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprMultiplicative([NotNull] AsylumParser.ExprMultiplicativeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprMultiplicative</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprMultiplicative([NotNull] AsylumParser.ExprMultiplicativeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprUnary</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprUnary([NotNull] AsylumParser.ExprUnaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprUnary</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprUnary([NotNull] AsylumParser.ExprUnaryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprBitAnd</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprBitAnd([NotNull] AsylumParser.ExprBitAndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprBitAnd</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprBitAnd([NotNull] AsylumParser.ExprBitAndContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprRange</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprRange([NotNull] AsylumParser.ExprRangeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprRange</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprRange([NotNull] AsylumParser.ExprRangeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprInteger</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprInteger([NotNull] AsylumParser.ExprIntegerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprInteger</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprInteger([NotNull] AsylumParser.ExprIntegerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprAssignment</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprAssignment([NotNull] AsylumParser.ExprAssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprAssignment</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprAssignment([NotNull] AsylumParser.ExprAssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprLambda</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprLambda([NotNull] AsylumParser.ExprLambdaContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprLambda</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprLambda([NotNull] AsylumParser.ExprLambdaContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprSubprimary</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprSubprimary([NotNull] AsylumParser.ExprSubprimaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprSubprimary</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprSubprimary([NotNull] AsylumParser.ExprSubprimaryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimary_expression([NotNull] AsylumParser.Primary_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimary_expression([NotNull] AsylumParser.Primary_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.unary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnary_expression([NotNull] AsylumParser.Unary_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.unary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnary_expression([NotNull] AsylumParser.Unary_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.access_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAccess_modifier([NotNull] AsylumParser.Access_modifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.access_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAccess_modifier([NotNull] AsylumParser.Access_modifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableAssignmentUnpack</c>
	/// labeled alternative in <see cref="AsylumParser.variable_assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableAssignmentUnpack([NotNull] AsylumParser.VariableAssignmentUnpackContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableAssignmentUnpack</c>
	/// labeled alternative in <see cref="AsylumParser.variable_assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableAssignmentUnpack([NotNull] AsylumParser.VariableAssignmentUnpackContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableAssignmentNormal</c>
	/// labeled alternative in <see cref="AsylumParser.variable_assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableAssignmentNormal([NotNull] AsylumParser.VariableAssignmentNormalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableAssignmentNormal</c>
	/// labeled alternative in <see cref="AsylumParser.variable_assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableAssignmentNormal([NotNull] AsylumParser.VariableAssignmentNormalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableDeclareWithInitializer</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclareWithInitializer([NotNull] AsylumParser.VariableDeclareWithInitializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableDeclareWithInitializer</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclareWithInitializer([NotNull] AsylumParser.VariableDeclareWithInitializerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableDeclareWithTupleInitializer</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclareWithTupleInitializer([NotNull] AsylumParser.VariableDeclareWithTupleInitializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableDeclareWithTupleInitializer</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclareWithTupleInitializer([NotNull] AsylumParser.VariableDeclareWithTupleInitializerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableDeclareWithInitializerExpr</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclareWithInitializerExpr([NotNull] AsylumParser.VariableDeclareWithInitializerExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableDeclareWithInitializerExpr</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclareWithInitializerExpr([NotNull] AsylumParser.VariableDeclareWithInitializerExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableDeclareWithTupleInitializerExpr</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclareWithTupleInitializerExpr([NotNull] AsylumParser.VariableDeclareWithTupleInitializerExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableDeclareWithTupleInitializerExpr</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclareWithTupleInitializerExpr([NotNull] AsylumParser.VariableDeclareWithTupleInitializerExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableDeclareWithoutInitializer</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclareWithoutInitializer([NotNull] AsylumParser.VariableDeclareWithoutInitializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableDeclareWithoutInitializer</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclareWithoutInitializer([NotNull] AsylumParser.VariableDeclareWithoutInitializerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableDeclareWithoutInitializerMultipleTypes</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclareWithoutInitializerMultipleTypes([NotNull] AsylumParser.VariableDeclareWithoutInitializerMultipleTypesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableDeclareWithoutInitializerMultipleTypes</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclareWithoutInitializerMultipleTypes([NotNull] AsylumParser.VariableDeclareWithoutInitializerMultipleTypesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.label"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLabel([NotNull] AsylumParser.LabelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.label"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLabel([NotNull] AsylumParser.LabelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableArgsNoneOrSome</c>
	/// labeled alternative in <see cref="AsylumParser.variable_arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableArgsNoneOrSome([NotNull] AsylumParser.VariableArgsNoneOrSomeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableArgsNoneOrSome</c>
	/// labeled alternative in <see cref="AsylumParser.variable_arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableArgsNoneOrSome([NotNull] AsylumParser.VariableArgsNoneOrSomeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableArgsVariadicOnly</c>
	/// labeled alternative in <see cref="AsylumParser.variable_arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableArgsVariadicOnly([NotNull] AsylumParser.VariableArgsVariadicOnlyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableArgsVariadicOnly</c>
	/// labeled alternative in <see cref="AsylumParser.variable_arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableArgsVariadicOnly([NotNull] AsylumParser.VariableArgsVariadicOnlyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.variable_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_parameter([NotNull] AsylumParser.Variable_parameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.variable_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_parameter([NotNull] AsylumParser.Variable_parameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypeCustom</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarTypeCustom([NotNull] AsylumParser.VarTypeCustomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypeCustom</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarTypeCustom([NotNull] AsylumParser.VarTypeCustomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypeGenerics</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarTypeGenerics([NotNull] AsylumParser.VarTypeGenericsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypeGenerics</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarTypeGenerics([NotNull] AsylumParser.VarTypeGenericsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypeDietPointer</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarTypeDietPointer([NotNull] AsylumParser.VarTypeDietPointerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypeDietPointer</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarTypeDietPointer([NotNull] AsylumParser.VarTypeDietPointerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypeStatic</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarTypeStatic([NotNull] AsylumParser.VarTypeStaticContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypeStatic</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarTypeStatic([NotNull] AsylumParser.VarTypeStaticContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypeVolatile</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarTypeVolatile([NotNull] AsylumParser.VarTypeVolatileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypeVolatile</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarTypeVolatile([NotNull] AsylumParser.VarTypeVolatileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypeArray</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarTypeArray([NotNull] AsylumParser.VarTypeArrayContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypeArray</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarTypeArray([NotNull] AsylumParser.VarTypeArrayContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypeTuple</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarTypeTuple([NotNull] AsylumParser.VarTypeTupleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypeTuple</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarTypeTuple([NotNull] AsylumParser.VarTypeTupleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypeThis</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarTypeThis([NotNull] AsylumParser.VarTypeThisContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypeThis</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarTypeThis([NotNull] AsylumParser.VarTypeThisContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypeTupleProper</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarTypeTupleProper([NotNull] AsylumParser.VarTypeTupleProperContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypeTupleProper</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarTypeTupleProper([NotNull] AsylumParser.VarTypeTupleProperContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypeConstant</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarTypeConstant([NotNull] AsylumParser.VarTypeConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypeConstant</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarTypeConstant([NotNull] AsylumParser.VarTypeConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypeAtomic</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarTypeAtomic([NotNull] AsylumParser.VarTypeAtomicContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypeAtomic</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarTypeAtomic([NotNull] AsylumParser.VarTypeAtomicContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypeRawPointer</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarTypeRawPointer([NotNull] AsylumParser.VarTypeRawPointerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypeRawPointer</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarTypeRawPointer([NotNull] AsylumParser.VarTypeRawPointerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypePrimitive</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarTypePrimitive([NotNull] AsylumParser.VarTypePrimitiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypePrimitive</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarTypePrimitive([NotNull] AsylumParser.VarTypePrimitiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveString</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveString([NotNull] AsylumParser.PrimitiveStringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveString</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveString([NotNull] AsylumParser.PrimitiveStringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveBool</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveBool([NotNull] AsylumParser.PrimitiveBoolContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveBool</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveBool([NotNull] AsylumParser.PrimitiveBoolContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveUnsigned</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveUnsigned([NotNull] AsylumParser.PrimitiveUnsignedContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveUnsigned</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveUnsigned([NotNull] AsylumParser.PrimitiveUnsignedContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveSigned</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveSigned([NotNull] AsylumParser.PrimitiveSignedContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveSigned</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveSigned([NotNull] AsylumParser.PrimitiveSignedContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveHalf</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveHalf([NotNull] AsylumParser.PrimitiveHalfContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveHalf</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveHalf([NotNull] AsylumParser.PrimitiveHalfContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveFloat</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveFloat([NotNull] AsylumParser.PrimitiveFloatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveFloat</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveFloat([NotNull] AsylumParser.PrimitiveFloatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveDouble</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveDouble([NotNull] AsylumParser.PrimitiveDoubleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveDouble</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveDouble([NotNull] AsylumParser.PrimitiveDoubleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveExtended</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveExtended([NotNull] AsylumParser.PrimitiveExtendedContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveExtended</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveExtended([NotNull] AsylumParser.PrimitiveExtendedContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveDecimal</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveDecimal([NotNull] AsylumParser.PrimitiveDecimalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveDecimal</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveDecimal([NotNull] AsylumParser.PrimitiveDecimalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveFixed</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveFixed([NotNull] AsylumParser.PrimitiveFixedContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveFixed</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveFixed([NotNull] AsylumParser.PrimitiveFixedContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveVarLen</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveVarLen([NotNull] AsylumParser.PrimitiveVarLenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveVarLen</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveVarLen([NotNull] AsylumParser.PrimitiveVarLenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveObject</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveObject([NotNull] AsylumParser.PrimitiveObjectContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveObject</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveObject([NotNull] AsylumParser.PrimitiveObjectContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveVoid</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveVoid([NotNull] AsylumParser.PrimitiveVoidContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveVoid</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveVoid([NotNull] AsylumParser.PrimitiveVoidContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveFunction</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveFunction([NotNull] AsylumParser.PrimitiveFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveFunction</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveFunction([NotNull] AsylumParser.PrimitiveFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveEvent</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveEvent([NotNull] AsylumParser.PrimitiveEventContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveEvent</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveEvent([NotNull] AsylumParser.PrimitiveEventContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveChar</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveChar([NotNull] AsylumParser.PrimitiveCharContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveChar</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveChar([NotNull] AsylumParser.PrimitiveCharContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveWideChar</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveWideChar([NotNull] AsylumParser.PrimitiveWideCharContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveWideChar</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveWideChar([NotNull] AsylumParser.PrimitiveWideCharContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveAutoVariable</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveAutoVariable([NotNull] AsylumParser.PrimitiveAutoVariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveAutoVariable</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveAutoVariable([NotNull] AsylumParser.PrimitiveAutoVariableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveUnsignedAny</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveUnsignedAny([NotNull] AsylumParser.PrimitiveUnsignedAnyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveUnsignedAny</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveUnsignedAny([NotNull] AsylumParser.PrimitiveUnsignedAnyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveSignedAny</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveSignedAny([NotNull] AsylumParser.PrimitiveSignedAnyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveSignedAny</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveSignedAny([NotNull] AsylumParser.PrimitiveSignedAnyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveFloatingAny</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveFloatingAny([NotNull] AsylumParser.PrimitiveFloatingAnyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveFloatingAny</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveFloatingAny([NotNull] AsylumParser.PrimitiveFloatingAnyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveFixedAny</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveFixedAny([NotNull] AsylumParser.PrimitiveFixedAnyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveFixedAny</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveFixedAny([NotNull] AsylumParser.PrimitiveFixedAnyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ConstantTrue</c>
	/// labeled alternative in <see cref="AsylumParser.defined_constants"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantTrue([NotNull] AsylumParser.ConstantTrueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ConstantTrue</c>
	/// labeled alternative in <see cref="AsylumParser.defined_constants"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantTrue([NotNull] AsylumParser.ConstantTrueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ConstantFalse</c>
	/// labeled alternative in <see cref="AsylumParser.defined_constants"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantFalse([NotNull] AsylumParser.ConstantFalseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ConstantFalse</c>
	/// labeled alternative in <see cref="AsylumParser.defined_constants"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantFalse([NotNull] AsylumParser.ConstantFalseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ConstantNull</c>
	/// labeled alternative in <see cref="AsylumParser.defined_constants"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantNull([NotNull] AsylumParser.ConstantNullContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ConstantNull</c>
	/// labeled alternative in <see cref="AsylumParser.defined_constants"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantNull([NotNull] AsylumParser.ConstantNullContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.variable_or_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_or_function([NotNull] AsylumParser.Variable_or_functionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.variable_or_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_or_function([NotNull] AsylumParser.Variable_or_functionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperator([NotNull] AsylumParser.OperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperator([NotNull] AsylumParser.OperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.assignment_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment_operator([NotNull] AsylumParser.Assignment_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.assignment_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment_operator([NotNull] AsylumParser.Assignment_operatorContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
