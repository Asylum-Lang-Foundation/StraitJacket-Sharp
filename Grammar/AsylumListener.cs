//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Asylum.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="AsylumParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface IAsylumListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.init"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInit([NotNull] AsylumParser.InitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.init"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInit([NotNull] AsylumParser.InitContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UniversalUsing</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUniversalUsing([NotNull] AsylumParser.UniversalUsingContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UniversalUsing</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUniversalUsing([NotNull] AsylumParser.UniversalUsingContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UniversalNamespace</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUniversalNamespace([NotNull] AsylumParser.UniversalNamespaceContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UniversalNamespace</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUniversalNamespace([NotNull] AsylumParser.UniversalNamespaceContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UniversalExternFunction</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUniversalExternFunction([NotNull] AsylumParser.UniversalExternFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UniversalExternFunction</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUniversalExternFunction([NotNull] AsylumParser.UniversalExternFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UniversalFunction</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUniversalFunction([NotNull] AsylumParser.UniversalFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UniversalFunction</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUniversalFunction([NotNull] AsylumParser.UniversalFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UniversalEnum</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUniversalEnum([NotNull] AsylumParser.UniversalEnumContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UniversalEnum</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUniversalEnum([NotNull] AsylumParser.UniversalEnumContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UniversalUnion</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUniversalUnion([NotNull] AsylumParser.UniversalUnionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UniversalUnion</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUniversalUnion([NotNull] AsylumParser.UniversalUnionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UniversalStruct</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUniversalStruct([NotNull] AsylumParser.UniversalStructContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UniversalStruct</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUniversalStruct([NotNull] AsylumParser.UniversalStructContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UniversalInterface</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUniversalInterface([NotNull] AsylumParser.UniversalInterfaceContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UniversalInterface</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUniversalInterface([NotNull] AsylumParser.UniversalInterfaceContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UniversalImplementation</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUniversalImplementation([NotNull] AsylumParser.UniversalImplementationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UniversalImplementation</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUniversalImplementation([NotNull] AsylumParser.UniversalImplementationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UniversalTypedef</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUniversalTypedef([NotNull] AsylumParser.UniversalTypedefContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UniversalTypedef</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUniversalTypedef([NotNull] AsylumParser.UniversalTypedefContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UniversalTopLevelCode</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUniversalTopLevelCode([NotNull] AsylumParser.UniversalTopLevelCodeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UniversalTopLevelCode</c>
	/// labeled alternative in <see cref="AsylumParser.universal_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUniversalTopLevelCode([NotNull] AsylumParser.UniversalTopLevelCodeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.using_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUsing_statement([NotNull] AsylumParser.Using_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.using_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUsing_statement([NotNull] AsylumParser.Using_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.namespace_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespace_statement([NotNull] AsylumParser.Namespace_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.namespace_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespace_statement([NotNull] AsylumParser.Namespace_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.extern_function_property"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExtern_function_property([NotNull] AsylumParser.Extern_function_propertyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.extern_function_property"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExtern_function_property([NotNull] AsylumParser.Extern_function_propertyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.extern_function_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExtern_function_definition([NotNull] AsylumParser.Extern_function_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.extern_function_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExtern_function_definition([NotNull] AsylumParser.Extern_function_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.function_property"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_property([NotNull] AsylumParser.Function_propertyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.function_property"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_property([NotNull] AsylumParser.Function_propertyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.function_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_definition([NotNull] AsylumParser.Function_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.function_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_definition([NotNull] AsylumParser.Function_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.constructor_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstructor_definition([NotNull] AsylumParser.Constructor_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.constructor_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstructor_definition([NotNull] AsylumParser.Constructor_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.operator_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperator_definition([NotNull] AsylumParser.Operator_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.operator_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperator_definition([NotNull] AsylumParser.Operator_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttribute([NotNull] AsylumParser.AttributeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttribute([NotNull] AsylumParser.AttributeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.enum_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnum_definition([NotNull] AsylumParser.Enum_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.enum_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnum_definition([NotNull] AsylumParser.Enum_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>EnumEntryPlain</c>
	/// labeled alternative in <see cref="AsylumParser.enum_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumEntryPlain([NotNull] AsylumParser.EnumEntryPlainContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>EnumEntryPlain</c>
	/// labeled alternative in <see cref="AsylumParser.enum_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumEntryPlain([NotNull] AsylumParser.EnumEntryPlainContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>EnumEntryData</c>
	/// labeled alternative in <see cref="AsylumParser.enum_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumEntryData([NotNull] AsylumParser.EnumEntryDataContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>EnumEntryData</c>
	/// labeled alternative in <see cref="AsylumParser.enum_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumEntryData([NotNull] AsylumParser.EnumEntryDataContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>EnumEntryStructs</c>
	/// labeled alternative in <see cref="AsylumParser.enum_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumEntryStructs([NotNull] AsylumParser.EnumEntryStructsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>EnumEntryStructs</c>
	/// labeled alternative in <see cref="AsylumParser.enum_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumEntryStructs([NotNull] AsylumParser.EnumEntryStructsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.union_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnion_definition([NotNull] AsylumParser.Union_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.union_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnion_definition([NotNull] AsylumParser.Union_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.struct_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStruct_definition([NotNull] AsylumParser.Struct_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.struct_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStruct_definition([NotNull] AsylumParser.Struct_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.interface_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterface_definition([NotNull] AsylumParser.Interface_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.interface_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterface_definition([NotNull] AsylumParser.Interface_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.implementation_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplementation_definition([NotNull] AsylumParser.Implementation_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.implementation_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplementation_definition([NotNull] AsylumParser.Implementation_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ImplementationEntryFunction</c>
	/// labeled alternative in <see cref="AsylumParser.implementation_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplementationEntryFunction([NotNull] AsylumParser.ImplementationEntryFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ImplementationEntryFunction</c>
	/// labeled alternative in <see cref="AsylumParser.implementation_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplementationEntryFunction([NotNull] AsylumParser.ImplementationEntryFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ImplementationEntryConstructor</c>
	/// labeled alternative in <see cref="AsylumParser.implementation_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplementationEntryConstructor([NotNull] AsylumParser.ImplementationEntryConstructorContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ImplementationEntryConstructor</c>
	/// labeled alternative in <see cref="AsylumParser.implementation_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplementationEntryConstructor([NotNull] AsylumParser.ImplementationEntryConstructorContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ImplementationEntryOperator</c>
	/// labeled alternative in <see cref="AsylumParser.implementation_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplementationEntryOperator([NotNull] AsylumParser.ImplementationEntryOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ImplementationEntryOperator</c>
	/// labeled alternative in <see cref="AsylumParser.implementation_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplementationEntryOperator([NotNull] AsylumParser.ImplementationEntryOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ImplementationEntryCast</c>
	/// labeled alternative in <see cref="AsylumParser.implementation_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplementationEntryCast([NotNull] AsylumParser.ImplementationEntryCastContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ImplementationEntryCast</c>
	/// labeled alternative in <see cref="AsylumParser.implementation_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplementationEntryCast([NotNull] AsylumParser.ImplementationEntryCastContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.cast_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCast_definition([NotNull] AsylumParser.Cast_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.cast_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCast_definition([NotNull] AsylumParser.Cast_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.typedef_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypedef_definition([NotNull] AsylumParser.Typedef_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.typedef_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypedef_definition([NotNull] AsylumParser.Typedef_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>StructData</c>
	/// labeled alternative in <see cref="AsylumParser.struct_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructData([NotNull] AsylumParser.StructDataContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StructData</c>
	/// labeled alternative in <see cref="AsylumParser.struct_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructData([NotNull] AsylumParser.StructDataContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>StructAccess</c>
	/// labeled alternative in <see cref="AsylumParser.struct_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructAccess([NotNull] AsylumParser.StructAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StructAccess</c>
	/// labeled alternative in <see cref="AsylumParser.struct_entry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructAccess([NotNull] AsylumParser.StructAccessContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PropertyGetSet</c>
	/// labeled alternative in <see cref="AsylumParser.struct_entry_property"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropertyGetSet([NotNull] AsylumParser.PropertyGetSetContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PropertyGetSet</c>
	/// labeled alternative in <see cref="AsylumParser.struct_entry_property"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropertyGetSet([NotNull] AsylumParser.PropertyGetSetContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PropertySetOnly</c>
	/// labeled alternative in <see cref="AsylumParser.struct_entry_property"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropertySetOnly([NotNull] AsylumParser.PropertySetOnlyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PropertySetOnly</c>
	/// labeled alternative in <see cref="AsylumParser.struct_entry_property"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropertySetOnly([NotNull] AsylumParser.PropertySetOnlyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.code_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCode_body([NotNull] AsylumParser.Code_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.code_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCode_body([NotNull] AsylumParser.Code_bodyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableDeclarationStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclarationStatement([NotNull] AsylumParser.VariableDeclarationStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableDeclarationStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclarationStatement([NotNull] AsylumParser.VariableDeclarationStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LoopStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoopStatement([NotNull] AsylumParser.LoopStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LoopStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoopStatement([NotNull] AsylumParser.LoopStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>WhileLoopStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileLoopStatement([NotNull] AsylumParser.WhileLoopStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>WhileLoopStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileLoopStatement([NotNull] AsylumParser.WhileLoopStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>DoWhileLoopStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDoWhileLoopStatement([NotNull] AsylumParser.DoWhileLoopStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DoWhileLoopStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDoWhileLoopStatement([NotNull] AsylumParser.DoWhileLoopStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ForLoopStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForLoopStatement([NotNull] AsylumParser.ForLoopStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ForLoopStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForLoopStatement([NotNull] AsylumParser.ForLoopStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BreakStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreakStatement([NotNull] AsylumParser.BreakStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BreakStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreakStatement([NotNull] AsylumParser.BreakStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ContinueStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContinueStatement([NotNull] AsylumParser.ContinueStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ContinueStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContinueStatement([NotNull] AsylumParser.ContinueStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IfStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStatement([NotNull] AsylumParser.IfStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IfStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStatement([NotNull] AsylumParser.IfStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>SwitchCaseStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchCaseStatement([NotNull] AsylumParser.SwitchCaseStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SwitchCaseStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchCaseStatement([NotNull] AsylumParser.SwitchCaseStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExpressionStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionStatement([NotNull] AsylumParser.ExpressionStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExpressionStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionStatement([NotNull] AsylumParser.ExpressionStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IndentedStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndentedStatement([NotNull] AsylumParser.IndentedStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IndentedStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndentedStatement([NotNull] AsylumParser.IndentedStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ReturnStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStatement([NotNull] AsylumParser.ReturnStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ReturnStatement</c>
	/// labeled alternative in <see cref="AsylumParser.code_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStatement([NotNull] AsylumParser.ReturnStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoop([NotNull] AsylumParser.LoopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoop([NotNull] AsylumParser.LoopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.while_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhile_loop([NotNull] AsylumParser.While_loopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.while_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhile_loop([NotNull] AsylumParser.While_loopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.do_while_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDo_while_loop([NotNull] AsylumParser.Do_while_loopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.do_while_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDo_while_loop([NotNull] AsylumParser.Do_while_loopContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TraditionalForLoop</c>
	/// labeled alternative in <see cref="AsylumParser.for_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTraditionalForLoop([NotNull] AsylumParser.TraditionalForLoopContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TraditionalForLoop</c>
	/// labeled alternative in <see cref="AsylumParser.for_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTraditionalForLoop([NotNull] AsylumParser.TraditionalForLoopContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TraditionalForLoopNoParens</c>
	/// labeled alternative in <see cref="AsylumParser.for_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTraditionalForLoopNoParens([NotNull] AsylumParser.TraditionalForLoopNoParensContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TraditionalForLoopNoParens</c>
	/// labeled alternative in <see cref="AsylumParser.for_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTraditionalForLoopNoParens([NotNull] AsylumParser.TraditionalForLoopNoParensContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ForEachLoop</c>
	/// labeled alternative in <see cref="AsylumParser.for_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForEachLoop([NotNull] AsylumParser.ForEachLoopContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ForEachLoop</c>
	/// labeled alternative in <see cref="AsylumParser.for_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForEachLoop([NotNull] AsylumParser.ForEachLoopContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ForEachLoopNoParens</c>
	/// labeled alternative in <see cref="AsylumParser.for_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForEachLoopNoParens([NotNull] AsylumParser.ForEachLoopNoParensContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ForEachLoopNoParens</c>
	/// labeled alternative in <see cref="AsylumParser.for_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForEachLoopNoParens([NotNull] AsylumParser.ForEachLoopNoParensContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.break_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreak_statement([NotNull] AsylumParser.Break_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.break_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreak_statement([NotNull] AsylumParser.Break_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.continue_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContinue_statement([NotNull] AsylumParser.Continue_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.continue_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContinue_statement([NotNull] AsylumParser.Continue_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_statement([NotNull] AsylumParser.If_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_statement([NotNull] AsylumParser.If_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>SwitchCase</c>
	/// labeled alternative in <see cref="AsylumParser.switch_case"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchCase([NotNull] AsylumParser.SwitchCaseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SwitchCase</c>
	/// labeled alternative in <see cref="AsylumParser.switch_case"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchCase([NotNull] AsylumParser.SwitchCaseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>SwitchCaseNoParens</c>
	/// labeled alternative in <see cref="AsylumParser.switch_case"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchCaseNoParens([NotNull] AsylumParser.SwitchCaseNoParensContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SwitchCaseNoParens</c>
	/// labeled alternative in <see cref="AsylumParser.switch_case"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchCaseNoParens([NotNull] AsylumParser.SwitchCaseNoParensContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>CaseExpression</c>
	/// labeled alternative in <see cref="AsylumParser.switch_rule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseExpression([NotNull] AsylumParser.CaseExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CaseExpression</c>
	/// labeled alternative in <see cref="AsylumParser.switch_rule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseExpression([NotNull] AsylumParser.CaseExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>CaseDefault</c>
	/// labeled alternative in <see cref="AsylumParser.switch_rule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseDefault([NotNull] AsylumParser.CaseDefaultContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CaseDefault</c>
	/// labeled alternative in <see cref="AsylumParser.switch_rule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseDefault([NotNull] AsylumParser.CaseDefaultContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.function_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_call([NotNull] AsylumParser.Function_callContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.function_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_call([NotNull] AsylumParser.Function_callContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.constructor_with_initializers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstructor_with_initializers([NotNull] AsylumParser.Constructor_with_initializersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.constructor_with_initializers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstructor_with_initializers([NotNull] AsylumParser.Constructor_with_initializersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.initializer_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitializer_value([NotNull] AsylumParser.Initializer_valueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.initializer_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitializer_value([NotNull] AsylumParser.Initializer_valueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.return_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn_value([NotNull] AsylumParser.Return_valueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.return_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn_value([NotNull] AsylumParser.Return_valueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.type_implements_extended"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_implements_extended([NotNull] AsylumParser.Type_implements_extendedContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.type_implements_extended"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_implements_extended([NotNull] AsylumParser.Type_implements_extendedContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TypeImplementsExprSingle</c>
	/// labeled alternative in <see cref="AsylumParser.type_implements_extended_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeImplementsExprSingle([NotNull] AsylumParser.TypeImplementsExprSingleContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TypeImplementsExprSingle</c>
	/// labeled alternative in <see cref="AsylumParser.type_implements_extended_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeImplementsExprSingle([NotNull] AsylumParser.TypeImplementsExprSingleContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TypeImplementsExprAnd</c>
	/// labeled alternative in <see cref="AsylumParser.type_implements_extended_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeImplementsExprAnd([NotNull] AsylumParser.TypeImplementsExprAndContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TypeImplementsExprAnd</c>
	/// labeled alternative in <see cref="AsylumParser.type_implements_extended_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeImplementsExprAnd([NotNull] AsylumParser.TypeImplementsExprAndContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TypeImplementsExprOr</c>
	/// labeled alternative in <see cref="AsylumParser.type_implements_extended_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeImplementsExprOr([NotNull] AsylumParser.TypeImplementsExprOrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TypeImplementsExprOr</c>
	/// labeled alternative in <see cref="AsylumParser.type_implements_extended_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeImplementsExprOr([NotNull] AsylumParser.TypeImplementsExprOrContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TypeImplementsExprParenthesis</c>
	/// labeled alternative in <see cref="AsylumParser.type_implements_extended_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeImplementsExprParenthesis([NotNull] AsylumParser.TypeImplementsExprParenthesisContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TypeImplementsExprParenthesis</c>
	/// labeled alternative in <see cref="AsylumParser.type_implements_extended_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeImplementsExprParenthesis([NotNull] AsylumParser.TypeImplementsExprParenthesisContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.type_implements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_implements([NotNull] AsylumParser.Type_implementsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.type_implements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_implements([NotNull] AsylumParser.Type_implementsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.generic_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneric_definition([NotNull] AsylumParser.Generic_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.generic_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneric_definition([NotNull] AsylumParser.Generic_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.generic_specifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneric_specifier([NotNull] AsylumParser.Generic_specifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.generic_specifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneric_specifier([NotNull] AsylumParser.Generic_specifierContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprCode</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprCode([NotNull] AsylumParser.ExprCodeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprCode</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprCode([NotNull] AsylumParser.ExprCodeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprTernary</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprTernary([NotNull] AsylumParser.ExprTernaryContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprTernary</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprTernary([NotNull] AsylumParser.ExprTernaryContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprComparison</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprComparison([NotNull] AsylumParser.ExprComparisonContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprComparison</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprComparison([NotNull] AsylumParser.ExprComparisonContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprString</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprString([NotNull] AsylumParser.ExprStringContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprString</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprString([NotNull] AsylumParser.ExprStringContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprNullCheck</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprNullCheck([NotNull] AsylumParser.ExprNullCheckContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprNullCheck</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprNullCheck([NotNull] AsylumParser.ExprNullCheckContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprComma</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprComma([NotNull] AsylumParser.ExprCommaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprComma</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprComma([NotNull] AsylumParser.ExprCommaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprParenthesis</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprParenthesis([NotNull] AsylumParser.ExprParenthesisContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprParenthesis</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprParenthesis([NotNull] AsylumParser.ExprParenthesisContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprShift</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprShift([NotNull] AsylumParser.ExprShiftContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprShift</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprShift([NotNull] AsylumParser.ExprShiftContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprCallReturnedFunction</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprCallReturnedFunction([NotNull] AsylumParser.ExprCallReturnedFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprCallReturnedFunction</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprCallReturnedFunction([NotNull] AsylumParser.ExprCallReturnedFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprAdditive</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprAdditive([NotNull] AsylumParser.ExprAdditiveContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprAdditive</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprAdditive([NotNull] AsylumParser.ExprAdditiveContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprBitOr</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprBitOr([NotNull] AsylumParser.ExprBitOrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprBitOr</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprBitOr([NotNull] AsylumParser.ExprBitOrContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprPrimary</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprPrimary([NotNull] AsylumParser.ExprPrimaryContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprPrimary</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprPrimary([NotNull] AsylumParser.ExprPrimaryContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprAnd</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprAnd([NotNull] AsylumParser.ExprAndContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprAnd</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprAnd([NotNull] AsylumParser.ExprAndContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprEqualityComparison</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprEqualityComparison([NotNull] AsylumParser.ExprEqualityComparisonContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprEqualityComparison</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprEqualityComparison([NotNull] AsylumParser.ExprEqualityComparisonContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprXor</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprXor([NotNull] AsylumParser.ExprXorContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprXor</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprXor([NotNull] AsylumParser.ExprXorContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprOr</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprOr([NotNull] AsylumParser.ExprOrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprOr</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprOr([NotNull] AsylumParser.ExprOrContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprMultiplicative</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprMultiplicative([NotNull] AsylumParser.ExprMultiplicativeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprMultiplicative</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprMultiplicative([NotNull] AsylumParser.ExprMultiplicativeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprUnary</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprUnary([NotNull] AsylumParser.ExprUnaryContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprUnary</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprUnary([NotNull] AsylumParser.ExprUnaryContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprBitAnd</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprBitAnd([NotNull] AsylumParser.ExprBitAndContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprBitAnd</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprBitAnd([NotNull] AsylumParser.ExprBitAndContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprRange</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprRange([NotNull] AsylumParser.ExprRangeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprRange</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprRange([NotNull] AsylumParser.ExprRangeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprInteger</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprInteger([NotNull] AsylumParser.ExprIntegerContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprInteger</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprInteger([NotNull] AsylumParser.ExprIntegerContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprAssignment</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprAssignment([NotNull] AsylumParser.ExprAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprAssignment</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprAssignment([NotNull] AsylumParser.ExprAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprLambda</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprLambda([NotNull] AsylumParser.ExprLambdaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprLambda</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprLambda([NotNull] AsylumParser.ExprLambdaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExprSubprimary</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprSubprimary([NotNull] AsylumParser.ExprSubprimaryContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprSubprimary</c>
	/// labeled alternative in <see cref="AsylumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprSubprimary([NotNull] AsylumParser.ExprSubprimaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.primary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimary_expression([NotNull] AsylumParser.Primary_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.primary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimary_expression([NotNull] AsylumParser.Primary_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.unary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnary_expression([NotNull] AsylumParser.Unary_expressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.unary_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnary_expression([NotNull] AsylumParser.Unary_expressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.access_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccess_modifier([NotNull] AsylumParser.Access_modifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.access_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccess_modifier([NotNull] AsylumParser.Access_modifierContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableAssignmentUnpack</c>
	/// labeled alternative in <see cref="AsylumParser.variable_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableAssignmentUnpack([NotNull] AsylumParser.VariableAssignmentUnpackContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableAssignmentUnpack</c>
	/// labeled alternative in <see cref="AsylumParser.variable_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableAssignmentUnpack([NotNull] AsylumParser.VariableAssignmentUnpackContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableAssignmentNormal</c>
	/// labeled alternative in <see cref="AsylumParser.variable_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableAssignmentNormal([NotNull] AsylumParser.VariableAssignmentNormalContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableAssignmentNormal</c>
	/// labeled alternative in <see cref="AsylumParser.variable_assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableAssignmentNormal([NotNull] AsylumParser.VariableAssignmentNormalContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableDeclareWithInitializer</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclareWithInitializer([NotNull] AsylumParser.VariableDeclareWithInitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableDeclareWithInitializer</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclareWithInitializer([NotNull] AsylumParser.VariableDeclareWithInitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableDeclareWithTupleInitializer</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclareWithTupleInitializer([NotNull] AsylumParser.VariableDeclareWithTupleInitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableDeclareWithTupleInitializer</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclareWithTupleInitializer([NotNull] AsylumParser.VariableDeclareWithTupleInitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableDeclareWithInitializerExpr</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclareWithInitializerExpr([NotNull] AsylumParser.VariableDeclareWithInitializerExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableDeclareWithInitializerExpr</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclareWithInitializerExpr([NotNull] AsylumParser.VariableDeclareWithInitializerExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableDeclareWithTupleInitializerExpr</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclareWithTupleInitializerExpr([NotNull] AsylumParser.VariableDeclareWithTupleInitializerExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableDeclareWithTupleInitializerExpr</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclareWithTupleInitializerExpr([NotNull] AsylumParser.VariableDeclareWithTupleInitializerExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableDeclareWithoutInitializer</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclareWithoutInitializer([NotNull] AsylumParser.VariableDeclareWithoutInitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableDeclareWithoutInitializer</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclareWithoutInitializer([NotNull] AsylumParser.VariableDeclareWithoutInitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableDeclareWithoutInitializerMultipleTypes</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclareWithoutInitializerMultipleTypes([NotNull] AsylumParser.VariableDeclareWithoutInitializerMultipleTypesContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableDeclareWithoutInitializerMultipleTypes</c>
	/// labeled alternative in <see cref="AsylumParser.variable_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclareWithoutInitializerMultipleTypes([NotNull] AsylumParser.VariableDeclareWithoutInitializerMultipleTypesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabel([NotNull] AsylumParser.LabelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabel([NotNull] AsylumParser.LabelContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableArgsNoneOrSome</c>
	/// labeled alternative in <see cref="AsylumParser.variable_arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableArgsNoneOrSome([NotNull] AsylumParser.VariableArgsNoneOrSomeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableArgsNoneOrSome</c>
	/// labeled alternative in <see cref="AsylumParser.variable_arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableArgsNoneOrSome([NotNull] AsylumParser.VariableArgsNoneOrSomeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableArgsVariadicOnly</c>
	/// labeled alternative in <see cref="AsylumParser.variable_arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableArgsVariadicOnly([NotNull] AsylumParser.VariableArgsVariadicOnlyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableArgsVariadicOnly</c>
	/// labeled alternative in <see cref="AsylumParser.variable_arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableArgsVariadicOnly([NotNull] AsylumParser.VariableArgsVariadicOnlyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.variable_parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable_parameter([NotNull] AsylumParser.Variable_parameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.variable_parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable_parameter([NotNull] AsylumParser.Variable_parameterContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypeCustom</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarTypeCustom([NotNull] AsylumParser.VarTypeCustomContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypeCustom</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarTypeCustom([NotNull] AsylumParser.VarTypeCustomContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypeGenerics</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarTypeGenerics([NotNull] AsylumParser.VarTypeGenericsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypeGenerics</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarTypeGenerics([NotNull] AsylumParser.VarTypeGenericsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypeStatic</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarTypeStatic([NotNull] AsylumParser.VarTypeStaticContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypeStatic</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarTypeStatic([NotNull] AsylumParser.VarTypeStaticContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypeVolatile</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarTypeVolatile([NotNull] AsylumParser.VarTypeVolatileContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypeVolatile</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarTypeVolatile([NotNull] AsylumParser.VarTypeVolatileContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypeArray</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarTypeArray([NotNull] AsylumParser.VarTypeArrayContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypeArray</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarTypeArray([NotNull] AsylumParser.VarTypeArrayContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypeTuple</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarTypeTuple([NotNull] AsylumParser.VarTypeTupleContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypeTuple</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarTypeTuple([NotNull] AsylumParser.VarTypeTupleContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypeThis</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarTypeThis([NotNull] AsylumParser.VarTypeThisContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypeThis</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarTypeThis([NotNull] AsylumParser.VarTypeThisContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypeReference</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarTypeReference([NotNull] AsylumParser.VarTypeReferenceContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypeReference</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarTypeReference([NotNull] AsylumParser.VarTypeReferenceContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypeTupleProper</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarTypeTupleProper([NotNull] AsylumParser.VarTypeTupleProperContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypeTupleProper</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarTypeTupleProper([NotNull] AsylumParser.VarTypeTupleProperContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypeConstant</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarTypeConstant([NotNull] AsylumParser.VarTypeConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypeConstant</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarTypeConstant([NotNull] AsylumParser.VarTypeConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypeAtomic</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarTypeAtomic([NotNull] AsylumParser.VarTypeAtomicContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypeAtomic</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarTypeAtomic([NotNull] AsylumParser.VarTypeAtomicContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypePrimitive</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarTypePrimitive([NotNull] AsylumParser.VarTypePrimitiveContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypePrimitive</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarTypePrimitive([NotNull] AsylumParser.VarTypePrimitiveContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VarTypePointer</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarTypePointer([NotNull] AsylumParser.VarTypePointerContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VarTypePointer</c>
	/// labeled alternative in <see cref="AsylumParser.variable_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarTypePointer([NotNull] AsylumParser.VarTypePointerContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveString</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveString([NotNull] AsylumParser.PrimitiveStringContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveString</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveString([NotNull] AsylumParser.PrimitiveStringContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveBool</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveBool([NotNull] AsylumParser.PrimitiveBoolContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveBool</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveBool([NotNull] AsylumParser.PrimitiveBoolContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveUnsigned</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveUnsigned([NotNull] AsylumParser.PrimitiveUnsignedContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveUnsigned</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveUnsigned([NotNull] AsylumParser.PrimitiveUnsignedContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveSigned</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveSigned([NotNull] AsylumParser.PrimitiveSignedContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveSigned</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveSigned([NotNull] AsylumParser.PrimitiveSignedContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveHalf</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveHalf([NotNull] AsylumParser.PrimitiveHalfContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveHalf</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveHalf([NotNull] AsylumParser.PrimitiveHalfContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveFloat</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveFloat([NotNull] AsylumParser.PrimitiveFloatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveFloat</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveFloat([NotNull] AsylumParser.PrimitiveFloatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveDouble</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveDouble([NotNull] AsylumParser.PrimitiveDoubleContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveDouble</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveDouble([NotNull] AsylumParser.PrimitiveDoubleContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveExtended</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveExtended([NotNull] AsylumParser.PrimitiveExtendedContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveExtended</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveExtended([NotNull] AsylumParser.PrimitiveExtendedContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveDecimal</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveDecimal([NotNull] AsylumParser.PrimitiveDecimalContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveDecimal</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveDecimal([NotNull] AsylumParser.PrimitiveDecimalContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveFixed</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveFixed([NotNull] AsylumParser.PrimitiveFixedContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveFixed</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveFixed([NotNull] AsylumParser.PrimitiveFixedContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveVarLen</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveVarLen([NotNull] AsylumParser.PrimitiveVarLenContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveVarLen</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveVarLen([NotNull] AsylumParser.PrimitiveVarLenContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveObject</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveObject([NotNull] AsylumParser.PrimitiveObjectContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveObject</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveObject([NotNull] AsylumParser.PrimitiveObjectContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveVoid</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveVoid([NotNull] AsylumParser.PrimitiveVoidContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveVoid</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveVoid([NotNull] AsylumParser.PrimitiveVoidContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveFunction</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveFunction([NotNull] AsylumParser.PrimitiveFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveFunction</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveFunction([NotNull] AsylumParser.PrimitiveFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveEvent</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveEvent([NotNull] AsylumParser.PrimitiveEventContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveEvent</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveEvent([NotNull] AsylumParser.PrimitiveEventContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveChar</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveChar([NotNull] AsylumParser.PrimitiveCharContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveChar</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveChar([NotNull] AsylumParser.PrimitiveCharContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveWideChar</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveWideChar([NotNull] AsylumParser.PrimitiveWideCharContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveWideChar</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveWideChar([NotNull] AsylumParser.PrimitiveWideCharContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveAutoVariable</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveAutoVariable([NotNull] AsylumParser.PrimitiveAutoVariableContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveAutoVariable</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveAutoVariable([NotNull] AsylumParser.PrimitiveAutoVariableContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveUnsignedAny</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveUnsignedAny([NotNull] AsylumParser.PrimitiveUnsignedAnyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveUnsignedAny</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveUnsignedAny([NotNull] AsylumParser.PrimitiveUnsignedAnyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveSignedAny</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveSignedAny([NotNull] AsylumParser.PrimitiveSignedAnyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveSignedAny</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveSignedAny([NotNull] AsylumParser.PrimitiveSignedAnyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveFloatingAny</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveFloatingAny([NotNull] AsylumParser.PrimitiveFloatingAnyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveFloatingAny</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveFloatingAny([NotNull] AsylumParser.PrimitiveFloatingAnyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveFixedAny</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveFixedAny([NotNull] AsylumParser.PrimitiveFixedAnyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveFixedAny</c>
	/// labeled alternative in <see cref="AsylumParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveFixedAny([NotNull] AsylumParser.PrimitiveFixedAnyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ConstantTrue</c>
	/// labeled alternative in <see cref="AsylumParser.defined_constants"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstantTrue([NotNull] AsylumParser.ConstantTrueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ConstantTrue</c>
	/// labeled alternative in <see cref="AsylumParser.defined_constants"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstantTrue([NotNull] AsylumParser.ConstantTrueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ConstantFalse</c>
	/// labeled alternative in <see cref="AsylumParser.defined_constants"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstantFalse([NotNull] AsylumParser.ConstantFalseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ConstantFalse</c>
	/// labeled alternative in <see cref="AsylumParser.defined_constants"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstantFalse([NotNull] AsylumParser.ConstantFalseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ConstantNull</c>
	/// labeled alternative in <see cref="AsylumParser.defined_constants"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstantNull([NotNull] AsylumParser.ConstantNullContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ConstantNull</c>
	/// labeled alternative in <see cref="AsylumParser.defined_constants"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstantNull([NotNull] AsylumParser.ConstantNullContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.variable_or_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable_or_function([NotNull] AsylumParser.Variable_or_functionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.variable_or_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable_or_function([NotNull] AsylumParser.Variable_or_functionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperator([NotNull] AsylumParser.OperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperator([NotNull] AsylumParser.OperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsylumParser.assignment_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment_operator([NotNull] AsylumParser.Assignment_operatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsylumParser.assignment_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment_operator([NotNull] AsylumParser.Assignment_operatorContext context);
}
